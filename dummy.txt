//-------------Server console of 'socket' variable------------------------

Socket {
    nsp: 
        Namespace {
                    name: '/',
                    server: 
                    Server {
                        nsps: [Object],
                        _path: '/socket.io',
                        _serveClient: true,
                        parser: [Object],
                        encoder: Encoder {},
                        _adapter: [Function: Adapter],
                        _origins: '*:*',
                        sockets: [Circular],
                        eio: [Object],
                        httpServer: [Object],
                        engine: [Object] },
                    sockets: { '464k0WV2psuIqSwSAAAA': [Circular] },
                    connected: { '464k0WV2psuIqSwSAAAA': [Circular] },
                    fns: [],
                    ids: 0,
                    rooms: [],
                    flags: {},
                    adapter: 
                    Adapter {
                        nsp: [Circular],
                        rooms: [Object],
                        sids: [Object],
                        encoder: Encoder {} },
                    _events: { connection: [Function] },
                    _eventsCount: 1 
        },
    server: 
        Server {
                    nsps: { '/': [Object] },
                    _path: '/socket.io',
                    _serveClient: true,
                    parser: 
                    { protocol: 4,
                        types: [Object],
                        CONNECT: 0,
                        DISCONNECT: 1,
                        EVENT: 2,
                        ACK: 3,
                        ERROR: 4,
                        BINARY_EVENT: 5,
                        BINARY_ACK: 6,
                        Encoder: [Function: Encoder],
                        Decoder: [Function: Decoder] },
                    encoder: Encoder {},
                    _adapter: [Function: Adapter],
                    _origins: '*:*',
                    sockets: 
                    Namespace {
                        name: '/',
                        server: [Circular],
                        sockets: [Object],
                        connected: [Object],
                        fns: [],
                        ids: 0,
                        rooms: [],
                        flags: {},
                        adapter: [Object],
                        _events: [Object],
                        _eventsCount: 1 },
                    eio: 
                    Server {
                        clients: [Object],
                        clientsCount: 1,
                        wsEngine: 'uws',
                        pingTimeout: 60000,
                        pingInterval: 25000,
                        upgradeTimeout: 10000,
                        maxHttpBufferSize: 100000000,
                        transports: [Object],
                        allowUpgrades: true,
                        allowRequest: [Function: bound ],
                        cookie: 'io',
                        cookiePath: '/',
                        cookieHttpOnly: true,
                        perMessageDeflate: [Object],
                        httpCompression: [Object],
                        initialPacket: [Object],
                        ws: [Object],
                        _events: [Object],
                        _eventsCount: 1 },
                    httpServer: 
                    Server {
                        domain: null,
                        _events: [Object],
                        _eventsCount: 6,
                        _maxListeners: undefined,
                        _connections: 1,
                        _handle: [Object],
                        _usingSlaves: false,
                        _slaves: [],
                        _unref: false,
                        allowHalfOpen: true,
                        pauseOnConnect: false,
                        httpAllowHalfOpen: false,
                        timeout: 120000,
                        _connectionKey: '6::::8080' },
                    engine: 
                    Server {
                        clients: [Object],
                        clientsCount: 1,
                        wsEngine: 'uws',
                        pingTimeout: 60000,
                        pingInterval: 25000,
                        upgradeTimeout: 10000,
                        maxHttpBufferSize: 100000000,
                        transports: [Object],
                        allowUpgrades: true,
                        allowRequest: [Function: bound ],
                        cookie: 'io',
                        cookiePath: '/',
                        cookieHttpOnly: true,
                        perMessageDeflate: [Object],
                        httpCompression: [Object],
                        initialPacket: [Object],
                        ws: [Object],
                        _events: [Object],
                        _eventsCount: 1 } 
            },
    adapter: 
            Adapter {
                        nsp: 
                        Namespace {
                                name: '/',
                                server: [Object],
                                sockets: [Object],
                                connected: [Object],
                                fns: [],
                                ids: 0,
                                rooms: [],
                                flags: {},
                                adapter: [Circular],
                                _events: [Object],
                                _eventsCount: 1 
                            },
                        rooms: { '464k0WV2psuIqSwSAAAA': [Object] },
                        sids: { '464k0WV2psuIqSwSAAAA': [Object] },
                        encoder: Encoder {} 
            },
    id: '464k0WV2psuIqSwSAAAA',
    client: 
            Client {
                        server: 
                        Server {
                            nsps: [Object],
                            _path: '/socket.io',
                            _serveClient: true,
                            parser: [Object],
                            encoder: Encoder {},
                            _adapter: [Function: Adapter],
                            _origins: '*:*',
                            sockets: [Object],
                            eio: [Object],
                            httpServer: [Object],
                            engine: [Object] },
                        conn: 
                        Socket {
                            id: '464k0WV2psuIqSwSAAAA',
                            server: [Object],
                            upgrading: false,
                            upgraded: false,
                            readyState: 'open',
                            writeBuffer: [],
                            packetsFn: [],
                            sentCallbackFn: [],
                            cleanupFn: [Object],
                            request: [Object],
                            remoteAddress: '::1',
                            checkIntervalTimer: null,
                            upgradeTimeoutTimer: null,
                            pingTimeoutTimer: [Object],
                            transport: [Object],
                            _events: [Object],
                            _eventsCount: 3 },
                        encoder: Encoder {},
                        decoder: Decoder { reconstructor: null, _callbacks: [Object] },
                        id: '464k0WV2psuIqSwSAAAA',
                        request: 
                        IncomingMessage {
                            _readableState: [Object],
                            readable: true,
                            domain: null,
                            _events: {},
                            _eventsCount: 0,
                            _maxListeners: undefined,
                            socket: [Object],
                            connection: [Object],
                            httpVersionMajor: 1,
                            httpVersionMinor: 1,
                            httpVersion: '1.1',
                            complete: true,
                            headers: [Object],
                            rawHeaders: [Object],
                            trailers: {},
                            rawTrailers: [],
                            upgrade: false,
                            url: '/socket.io/?EIO=3&transport=polling&t=L-aB5ep',
                            method: 'GET',
                            statusCode: null,
                            statusMessage: null,
                            client: [Object],
                            _consuming: false,
                            _dumped: true,
                            _query: [Object],
                            res: [Object],
                            cleanup: [Function: cleanup] },
                        onclose: [Function: bound ],
                        ondata: [Function: bound ],
                        onerror: [Function: bound ],
                        ondecoded: [Function: bound ],
                        sockets: { '464k0WV2psuIqSwSAAAA': [Circular] },
                        nsps: { '/': [Circular] },
                        connectBuffer: [] 
            },
    conn: 
            Socket {
                        id: '464k0WV2psuIqSwSAAAA',
                        server: 
                        Server {
                            clients: [Object],
                            clientsCount: 1,
                            wsEngine: 'uws',
                            pingTimeout: 60000,
                            pingInterval: 25000,
                            upgradeTimeout: 10000,
                            maxHttpBufferSize: 100000000,
                            transports: [Object],
                            allowUpgrades: true,
                            allowRequest: [Function: bound ],
                            cookie: 'io',
                            cookiePath: '/',
                            cookieHttpOnly: true,
                            perMessageDeflate: [Object],
                            httpCompression: [Object],
                            initialPacket: [Object],
                            ws: [Object],
                            _events: [Object],
                            _eventsCount: 1 },
                        upgrading: false,
                        upgraded: false,
                        readyState: 'open',
                        writeBuffer: [],
                        packetsFn: [],
                        sentCallbackFn: [],
                        cleanupFn: [ [Function], [Function] ],
                        request: 
                        IncomingMessage {
                            _readableState: [Object],
                            readable: true,
                            domain: null,
                            _events: {},
                            _eventsCount: 0,
                            _maxListeners: undefined,
                            socket: [Object],
                            connection: [Object],
                            httpVersionMajor: 1,
                            httpVersionMinor: 1,
                            httpVersion: '1.1',
                            complete: true,
                            headers: [Object],
                            rawHeaders: [Object],
                            trailers: {},
                            rawTrailers: [],
                            upgrade: false,
                            url: '/socket.io/?EIO=3&transport=polling&t=L-aB5ep',
                            method: 'GET',
                            statusCode: null,
                            statusMessage: null,
                            client: [Object],
                            _consuming: false,
                            _dumped: true,
                            _query: [Object],
                            res: [Object],
                            cleanup: [Function: cleanup] },
                        remoteAddress: '::1',
                        checkIntervalTimer: null,
                        upgradeTimeoutTimer: null,
                        pingTimeoutTimer: 
                        { _called: false,
                            _idleTimeout: 85000,
                            _idlePrev: [Object],
                            _idleNext: [Object],
                            _idleStart: 4960,
                            _onTimeout: [Function],
                            _repeat: null },
                        transport: 
                        XHR {
                            readyState: 'open',
                            discarded: false,
                            closeTimeout: 30000,
                            maxHttpBufferSize: 100000000,
                            httpCompression: [Object],
                            supportsBinary: true,
                            _events: [Object],
                            _eventsCount: 5,
                            sid: '464k0WV2psuIqSwSAAAA',
                            req: null,
                            res: null,
                            writable: false },
                        _events: 
                        { close: [Object],
                            data: [Function: bound ],
                            error: [Function: bound ] },
                        _eventsCount: 3 
            },
    rooms: {},
    acks: {},
    connected: true,
    disconnected: false,
    handshake: {
                    headers: 
                        { host: 'localhost:8080',
                            connection: 'keep-alive',
                            pragma: 'no-cache',
                            'cache-control': 'no-cache',
                            accept: '*/*',
                            'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.89 Safari/537.36',
                            referer: 'http://localhost:8080/',
                            'accept-encoding': 'gzip, deflate, br',
                            'accept-language': 'en-US,en;q=0.9',
                            cookie: 'io=l_oOPOOm63-ACSYTAAAA' },
                        time: 'Fri Nov 10 2017 09:54:51 GMT+0530 (IST)',
                        address: '::1',
                        xdomain: false,
                        secure: false,
                        issued: 1510287891017,
                        url: '/socket.io/?EIO=3&transport=polling&t=L-aB5ep',
                        query: { EIO: '3', transport: 'polling', t: 'L-aB5ep' } 
            },
    fns: [],
    flags: {},
    _rooms: [] 
}